Шаблоны служат для создания обощенных функций. Обобщённая функция- это функция, перегружающая сама себя. Это значит, что операции, которые в ней описаны, предназначены для разных типов данных.

Определение обобщенной функции начинается с ключевого слова template:

template <typename type> тип имя_функции (список_параметров)
{
// тело функции
}

если требуется использовать несколько типов принимаемых значений:

template <typename type1 , typename type2 > тип имя_функции (список_параметров)
{
// тело функции
}

Пример:

template <typename T1, typename T2>
void print(T1 a, T2 b){
  std::cout<<a<<" "<<b;
}

int main(){
print("Hello World", 9);
}

Пример 2:
template <typename T>
double Average(T a, T b){
   return (a+b)/2;
}

int main(){
     int a=6, b=8;
     double a1=2.8, b1=3.2;
     auto average2= Average(a,b);
     auto average1= Average(a1,b1); 
}

данная программа позволяет передавать в функцию как целые, так и дробные числа и находить среднее арифметическое.
Пример 3:

template <typename T1, typename T2>
addition(T1 a, T2 b){
     return (a+b);
}

int main(){

auto add1=addition(1.45,3);
auto add2=addition(1,3.75);

}
данная программа позволяет передавать в функцию одновпеменно различные типы данных 
